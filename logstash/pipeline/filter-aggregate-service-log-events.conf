filter {
	if [type] == "server-log" {
		grok {
			match => ["message", "%{TIMESTAMP_ISO8601:timestamp_evento}\s*\w+\s*\[%{JAVACLASS:componente}\]\s*\((?<thread_name>.*?)\)\s*(?<mensagem>.*?)\r?$"]
		}

		if [thread_name] !~ "org.springframework.scheduling.quartz.SchedulerFactoryBean#.*" {
			drop {}
		}

		date {
			match => [ "timestamp_evento" , "ISO8601"]
			target => "@timestamp"
			locale => "pt"
			timezone => "America/Sao_Paulo"
		}

		mutate {
			remove_field => ["timestamp_evento", "message", "path", "host"]
		}

		grok {
			match => { "thread_name" => "%{JAVACLASS}#(?<thread_id>.*)$" }
		}

		if [mensagem] =~ "(Iniciando|Finalizando) serviço.*" {
			grok {
				match => { "mensagem" => "^\w+ serviço (?<task_name>.*)$" }
			}
			mutate {
				add_field => { "taskid" => "%{thread_id}%{task_name}" }
			}

			if [mensagem] =~ "Iniciando serviço.*" {
				aggregate {
					task_id => "%{taskid}"
					code => "map['task_start'] = event.get('@timestamp')"
					map_action => "create"
				}
				drop {}
			}
			if [mensagem] =~ "Finalizando serviço.*" {
				aggregate {
					task_id => "%{taskid}"
					code => "event.set('task_start', map['task_start']); event.set('duracao', event.get('@timestamp') - map['task_start']);"
					end_of_task => true
				}
				mutate {
					remove_field => ["thread_id", "taskid"]
				}
			}
		} else if [mensagem] in ["INICIANDO ENVIO DE MENSAGENS NA FILA", "ENVIO DE MENSAGENS FINALIZADO"]{
			mutate {
				add_field => { "taskid" => "%{thread_id}fila_mensagens" }
			}
			mutate {
				add_field => { "task_name" => "ENVIO DE MENSAGENS NA FILA" }
			}
			if [mensagem] =~ "INICIANDO.*" {
				aggregate {
					task_id => "%{taskid}"
					code => "map['task_start'] = event.get('@timestamp')"
					map_action => "create"
				}
				drop {}
			}
			if [mensagem] =~ ".*FINALIZADO" {
				aggregate {
					task_id => "%{taskid}"
					code => "event.set('task_start', map['task_start']); event.set('duracao', event.get('@timestamp') - map['task_start']);"
					end_of_task => true
				}
				mutate {
					remove_field => ["thread_id", "taskid"]
				}
			}
		} else {
			drop {}
		}
	}
}
output {
	stdout{ codec => rubydebug }
}
